####    How To Open This Script?    ####
###     Use unlock Function         ####
import getpass,hashlib,base64
def hasher(text,length,key):
    if length > 64:
       raise ValueError("hash length should be lower than 64")
    result = hashlib.sha256(text+key+text).hexdigest()[:length][::-1]
    return result #return final result


def separator(text,length):
    return [text[i:i+length] for i in range(0,len(text),int(length))]

def decrypt(text,key):
    textsplit = text.split("!-!")
    encrypted,shuffled,hash_length,separate_length = textsplit[0].split("|")
    encrypted = separator(encrypted,int(hash_length))
    encrypted2 = separator("".join(encrypted),int(hash_length))
    shuffled = separator(shuffled,int(separate_length))
    primary_key_is_true = True
    for i in shuffled:
        hashed = hasher(i,int(hash_length),key)
        if hashed in encrypted:
           encrypted[encrypted.index(hashed)] = i

    for i in encrypted:
        if i in encrypted2 and len(textsplit) == 1:
           raise KeyError("Wrong Key")
        elif i in encrypted2:
           primary_key_is_true = False
           break

    if primary_key_is_true:
       result = base64.b64decode("".join(encrypted)[::-1])

    if len(textsplit) >= 2 and primary_key_is_true == False:
       master_key = separator(textsplit[1],int(hash_length))
       master_key2 = separator("".join(master_key),int(hash_length))
       for i in shuffled:
           hashed = hasher(i,int(hash_length),key)
           if hashed in master_key:
              master_key[master_key.index(hashed)] = i

       for i in master_key:
           if i in master_key2:
              raise KeyError("Wrong Key")
       result = base64.b64decode("".join(master_key)[::-1])
    return result

def unlock(key):
    exec (decrypt("d3a34665b91d7714b7941e6dafcff8d62abb50057abda07d336cd46f8721d010366b6066b32bf8dc31926e2163ddc36ed914c0f4d9b20c91f5eb518f3ff822f3badf5615b3feb0bde20445daeb210b474d4ac27404689d9e134464a7bf5bb9acd50245de3ecfb887a2ce1176388bea3bf8590408b847e1e2a77cfaf12a88ce55dac5fa03b84d1e91a960b4e498eceef7f04455a58bb8bb71d53ffd9812504780227f0de578dc60157442e4506a3b6eae8c04e5658767de03c76458a3c8870352382342feecf9c09c305c1ee47e646d0d10028f783c41e6d58180ed285e0b762fb271a4c3772c70de14888fe7ec2e3d61d6c0962ecdece95ed11bd1a328f91b2ae7b93b9a3d16e5506398e487a2e714fdb091ea255de1dc637f6c4bc4ed32a20de53180dcc49e3b13e9ac388bdda11d38fee024abc7ab8ca6dca789d674fd4bfcbcb58b3b996580c021b0d1e539c398c9f8bb4bfe9562a3515e5b72ef5cf1cb8a788410f70e92cb3e31740f5c12c800da4f2c82f717be906216a30ce3d84a5b2d4903f084132ff7c22398761249fe5f5709fccefc5ca9fa594a34bc8b546749aec2915fbf235bf369b224f8356321e5077bc13ca68190fd0c232dccb4f8f85114c37fb75a971942e92a39978a001a3a79df8dcf8d396b21459e7754d75b9e6ab842e30e4fa16248bbff5add28dceac2e3611c4536078fd0101e2a95b1f7ed33245c15fcc3949ffa7ffec89c3797b1e784b3ab2f09153839e8e6e0b751d092b8ad3ba90d488571fc158bcba7a79b3b2b6a4279f18f2da9e28665be7feed9373e866df80a55b420cbf2fd398e97a5bb7d8cfb56b081c158943fc20de13c7a075564061c14f142c937525c59a2248516af4868e2b0e2d9a559c8ad53717e3086ac8e472b612b38ba61219e0dc6ca3255503b86814ad2d2c4263d558fa2c13df3ff54ec490be2df14b4c578ebc0b5b45cf1f1290b0662c686eab84897ffaf17251b36e0d4ee4e01e951b77fef79311b4728b449d0d894bb9d1b21b4ed7a8c2341b1c851adf162e77bdd1635c6593d68d763475d618001d0a1da0f2007a8940045b94070316afed6780a327e73c8cb3e549952b6d32f792ced2f56c89a4ddf19bc495fbccba2cc2d43d8b950536470ddcd31f1cdcc13efabb4e7a6ec8fe9765a39badb3dcbe5500610edda892feab3ea693556bd78264bd018dea5f151e389ca130183946a51d6bba1602f71c6f9739026971e0afe588d083088038a9b20521c14c8c3b8c5605932db30bbc84fabf42a92cab5c3b0e5632db77a8274430c5136eea2b154b7023fcbb88dce082be8e586a032a393117fd935eb578146b1e9a88d0590e46699f8d54048c3f2b86ad322275c5a5699b5d41e82e67dee73cfe3d94aa1541979166656235bf369b224f8356321e507fd1967aec32ec9a53343209008cefde290e9e60a349401c4bf8ab1e43f35c2f1ad7b004e4db493defdbb486916f522079e5288f6fb66aae8e52122a80cbb8db76cf0c601da1e253120be1afb2e7e06c369987f3be806e06721e072ff14be9b9389dd2dde6102439fa36e21ba36645022a83a6c4b156e965e6fcb188abca93fbc5bd72a17ae4f0d38ab218d3d3c4f6094fef701dd166ddf32c158bff00573dfb696c5c4e3eb4f93ca1f781f2401f6b3ba7059c74da5926fa889cda058f4b5f2bfe61e5111ac5b2c029c0c6d934a0d5266d7eaf4fe513ff9520910d3126b07e2550d9fd959868773f4c4cccf9f639e38036d64d487b34ea569ca76f3a4a65a7220c5f46e667c3359d9d952232ca12d2aac23788cff731ab394328f1e81e5b2a19a2c18ca5420dd0563981b233461b28d2b7310b2fe3db3f8236ca4a91a0fe840e0244418ab408ee93cb2e673ad39073697e0a30a393425d446ec459001f6d3dbc1c1ecf2563df61b0f75a0f7cae9fe1300cee27aaa19f523469f4f513169a20fd9694657901d0d013ebd8462530e462fc188edecc270be3e9f3a624767cfb47cb74bf4e59335eb578146b1e9a88d0590e46699f8d54048c3f2b86ad322e2daee86df3dae62005283d175a0f7cae9fe1300cee27aaa05ee3f252bdebe6e683cb6d3c2ba2f148bc10d58292972acd335a37f09661730d1e4269908bb402677684cd86b656e90120fe0f1dae380a4cd624e2c9ff32c90dd4d173b3d72f49ac3304ece8e644b8f12e7c2925f4369dfe30b26b8a72df55b6a0fdc753ec1e5b0506559957234ae103ec0e8040a02d8bfa9e9d04855bbf788a13758125e69423d8ea270731f96d9c2e9842f66203a1a5c1d0e883a17d7da47b5c3ff2c0e03f35952fc8dd32967865b454458361d19ac53f2d88e3f836fe010880c3122c145ab3b58879e87fff6dcf4887d6ec3dddbf1e549eea619f605b9d6b4a50ed51de546b325a7c1b9d4793bde78380d9cf4ce0629f55ab118fbff34a3f538c162dbad7c9ffaa97d9782ad077ab3cf36fc7d16d2446047e5e53e12dfe08373526979b5c785a10733f9773875ff65f26c1d6b3709ab43c02bb4c1eacbcf0a3a0d5ce985abb942662dca59c626185509a7ff46adbd32b525be8158374331a3f1d204912dc17a0863c5591bdb9e4af79f393d|4xmYtRGMhZkRjNi5CN2UpF0ZJNkQ5pnl0RGpHZTFws0QK1UWYJEMnpVb5kXSXVjbkd0Zw9jQzFGWSNnWGI0J3bw1WajejdEewRGSVbJdkV1l1MNNEezp1V08GMkdkV5t0R2RWp2SHFDaLdkR6R2UrtTJUSZdlTypSx2YphWbiNEcjlnQGJWbDWywWdjhkVtR3cidVN2NWNxJmMsV3SidkV1t0RFBUOJNkSwJGWYpkeMhkSsN2d5o1V1o2YkekN1awtUUOR0ZzlERVNj5mTvl1V3V2RWV3SIpEa3NWeopmYyENd2TpFUaLNkN0ZpR1MWB3YphGbi1mTXhHbilGatJ2YqFjYj1mRmbRdmYHZVdWMoR2QoJTWkVtplMoBXYDdXaklXSwx5d3ZNRVS5tGSGl3YzIVM1cadVNuR2RHTHhHbilGa1oXWXFzdidy4UQvtkWHZUVvJ2VGd3SsR3YHlTekNGSJ9WWykzaXSGRnaiJjUIZFMQhlSoR0ZvdWSDF0Zj1mR1p1R5QFWJNXWTt2cahFaslVeoR1UCdjZWhXdWbGVnWyU1bUOxQGSCFDZ=kSKdFTL6oEezlFWCB3YzYIZFMJR0b3SU92SJNUQmYDVzakdVM2STNnbKlXNrBHWRBXeZdzp1UBZTSDlHajNTV5kUbGhXdlNDMnBnBHWR92Sa12U1oXWXFzdVMMNUQ100QDZDdWaS1GbkQ0lFWKpXYidUVvRWbGl1p1R5QHTt5nYHlDaahUTGeLRGWOBTUTOrp1UrZzQUda1WO5J2VOZnWHV1cjNxJmMsV3SIpaN1azNWbWdXWYpkehdkRwZ3YHZVdLd1oXWXFzdidEcLNVN5p1VzN2MCNXYYJIpEai1mUykGBzSDlkcJlHTHpEajJTVH50bjl2dnNWWykzaaN1aKVzYIF1bZJzSTFkcJhkSWbGVnWyU1bzoEMJdUMoNahFaslVeJBzxUb4ZXWXJUVvVWbsd3SlR5NmMohmYrlGTtpldj1nejdEewR2ROZnWHV1cJpidlR5NmMohCZ3YuF1ZidEai1mU2J2UleLhEd5s0Un5WWXpkaadHt2ZhdFNnNGeoN2RspHUWYTJEcilmQ0UrNXSEFFcnlUartUWUFzdhdFest0RLNlQtJ2MJd5VGWCBzSHZ0biJDbqp1Uk5GZ0UGWv5VNrRWbGlHU0JoUGZvNWZkbklXYYJFbHZ0cYdUNsViNTSnRWbGlykFWJB3SRB2cadFNvl1Ui5WUvNWbGNVNup1UnVjTFWJtSSpdXalpAN2U2chJ5t2SjhkSwJoJWbkx2SEl2chJGKjVGeWM5AnYuJUMj1mVwQGWKV5l1V14mWThkFTOwJmbCFFWJB3SRBXbIpEai1mUykux2dkNEa2Nsl0RsVXSIptlESOdnYHxrd2S5JUeZdmbO9WWXd3c2QrdGT5JEcYpEai1mU2JsdlMrZTYTRzWnE2VxcnYvV2MwA3STlLdURwNkbahEai1mU2J2U3Y5hnaiJjU1aLJ2MWBzYFWSFzYtRzZ3SR92SadkVGt2SDtGcD1|24|10!-!e75670bc3e925e32d8118cd9ed6d5b9191b166a8d39acba54e843560e9ce8d0c4098e0b40ed697e0f0c2e8eb3ee36c8f6a306f8b858bdfb7352b898dfcea2e882f27b3127740baad8ef2e6458740d127078a8fa7a0085dd3e3d28dc5eb8a2193a2ef49ceaa4cc7b5346852bedec490373aef125e25aa1733d7711280c246fcbc77342b264f090ffb1686826385d5a438d995cf2e4e5dd929a5e6d93dcac65c3baf72f7cd5da3f14add7cf7b3f7302238eb74642f6a5446adcef42016de73c29d609d5d79a7516942802f87d3b4b294be58e06935a7812fe9b89b76c79805ee16ba5e72ceae0cfab9d5d9921a69118791703cb0d9d250549bf441b5ac9cfb54426a7fceb5cc5feefbf83c92be1254fbba52bd1416a2c12f5b75253773f673393bb63dcc1486513722d1f96a4c9fd34fee4fa3b61e5b5632d3c67688369dd8c6937e9b830ddaa95f27ced1bf0c595d3d846c3eb331938ce7ace40b447b8859cf4682d09605caa7c5573b21b62175cf3cf82021a368eb4a17e0990853bb8f98c2481c8a19232aeae53c6b050c9429d2e18cd9b0475fa259809b30060c55c8d39354329619653085303e62396f6ced70af67a83b05d8bfc78c0f9e68f221a80f4b4e5495a09f64ade63d7e923c5436603018761c478fdf69474fab937015fb9f5dab567dcc0fc9d31bc105753f0818e835ee3cdcc0ae186e40d21187590c19eaeb634daf276e9985903d1caf9ce87508508490bb4caa04902a3edb28f0776a38b59eecff0c6e6590a77ce3d978fbd16d35aae4f7580381e08b3930d820945b8031a01d1b34502c85c2b7e004da4fc1766be86609a9c4e55bc389b9b77ead652542cd03503eec1deb8cf26019feacfad512083d13e627807fa1b7430b166d363147627bdf11923f6d36127a673e71dc00915cbcfe7891ea8cddecb96485d76fc87e542f809906a3231b2ba74aecf8413373ec7fbb4ba22e0c9afebd1d04270e56e988e2c676c231d90cf6ab7cc83eae37dd462bdd94d845408b33d064d959071303e291829c2c4e102c9db2977cb3d476e877652a45d2bdf2ae12e59569360cda559268ff5cbe5711e2db32e6c1f59c5f943df7d3b9416e49cd13532ab6bba68a224a26ce99a302441417eba6b21b907ad09a33a38fadc7a3629afd267fd85ba171e5900acf43b69438175d02677ca976e2fb79e4d60a702735a33fafbe0cb43417d018365578e8a0354133534276ab3de3b16724c3fa2480cbea1e9719b89a48137fbeea1a3d391b797ee1d27e7552df643a9970d15ddfc87539d5dada22f31405509001440b4eda6dfb7c9348780200cb40be3a917a8373c644a775848c039e9484c0e8e37155334a1d13b7dc97a1b6ad7ca2e54c4187a7d5f79d61a6d2202a8ea61c31e9ec3085303e62396f6ced70af6747fbe3744dbc0371d3a2942e5fbe540ecd5d613067c7ead952e6046a8aebc3d612ed420288fa7cc75669587a56d05379fe75c9abbdeb1a17eac5018d55fedfd2d72df9eedad8bcc05d3e08637574d6588b8548090defaf5020e06ff599a5c48598ba24b942049b44b88f25951ae90176b71cd792ba101e5a7626a7d7138f08bf31a3f875f0f02eb740027e5745b7e5ed75863e8427f9754a72486a293f46d218c1773d9e4cfe54e0ad67606d50cfce5e2eb2706410c4c046a21fe061334631e99a6aaf77a07cd9dc417ca42cd64e5e799dcfc27b5952a6368379a8bdbfa4fa7a6fd396152a3b90ffcd59e8000b667f3bba5ca9ff19e0be727d0d7a8768a726d6c212d4aded0cf4fe3d28d6dd7e0850f49f683483a4ebd93892622c4dcbc4746f86413a25ed6852ff3ae425f908b1793cede8ecad7fd064f3ae99c8719c118a9658012c55068f1cdb7500de368b933ec4ccdeff92b1bde2c991abd2a021df7d01f280a4c341d66c3314fcfd0f086c08067fda506408f4220581db93e6bf7d34631dbc621661e867ea929e3b36a5399854ed38475c97c6f782d0b69159cc299d91c46a4a738373c644a775848c039e9484c0e8e37155334a1d13b7dc97689a1ae0402e99b1a022357d14fcfd0f086c08067fda50647cd61dcc07a2aa32acb88fb7a97bcf43ae71ae086c6866e70ca554fda212395875fc2eee552fc4ed6953f0a0f505db0027e891ccfda4110aa2f6544ae9d5a9ead5bc0e10cb2de2b9c6be8c57fb18d8b63e6a0497371f93d2d1c134f39051d5885c2804e19903d68855daf1532994661675f5f02fc76dedce531562f4c0caf467fc3937e70b63f07fb00dccd53a6f356fa242ed281be2013b05baa08b7bd9f1b31519c704644f78eb591144694804bee68c2a78a4717be1ac89e175c94646be9f748d79f2b1b8d4dcdff01a1925d693dfaad32a12edf9e7f7120224930cd3eb3718e0ff5ba520cb3715224af28f20272be0dec80f1c2ab50c84df1b929b718aa61d7cee4149c23f2a07cd1e3726c8479b045da5ee6e65be2bece9ffec9cf67781973a2c05880658e407bf770eccedb77d979055eb6e4ecf2561c4249dc5c3717b75f3f59511ced1b5141be1f2cbfe5b4b5d85a7b9086346aec0a38816fdb87fa3c4e5bfd7463b396f64a3a6d75e80800c62025489",key))

if "__main__" == __name__:
   unlock(getpass.getpass("Key : "))
