import random,hashlib,base64
def hasher(text,length,key):
    if length > 64:
       raise ValueError("hash length should be lower than 64")
    result = hashlib.sha256(text+key+text).hexdigest()[:length][::-1]
    return result #return final result


def separator(text,length):
    return [text[i:i+length] for i in range(0,len(text),int(length))]

def decrypt(text,key):
    textsplit = text.split("!-!")
    encrypted,shuffled,hash_length,separate_length = textsplit[0].split("|")
    encrypted = separator(encrypted,int(hash_length))
    encrypted2 = separator("".join(encrypted),int(hash_length))
    shuffled = separator(shuffled,int(separate_length))
    primary_key_is_true = True
    for i in shuffled:
        hashed = hasher(i,int(hash_length),key)
        if hashed in encrypted:
           encrypted[encrypted.index(hashed)] = i

    for i in encrypted:
        if i in encrypted2 and len(textsplit) == 1:
           raise KeyError("Wrong Key")
        elif i in encrypted2:
           primary_key_is_true = False
           break

    if primary_key_is_true:
       result = base64.b64decode("".join(encrypted)[::-1])

    if len(textsplit) >= 2 and primary_key_is_true == False:
       master_key = separator(textsplit[1],int(hash_length))
       master_key2 = separator("".join(master_key),int(hash_length))
       for i in shuffled:
           hashed = hasher(i,int(hash_length),key)
           if hashed in master_key:
              master_key[master_key.index(hashed)] = i

       for i in master_key:
           if i in master_key2:
              raise KeyError("Wrong Key")
       result = base64.b64decode("".join(master_key)[::-1])
    return result


exec (decrypt("030526aa8c55b9f21563a79c736b5e804d6b9f1d33a29407784bea4bf6cbe4a633531d37e06fcc4733f108be1b181e0889dbbadef774cb45d976e3ebe8143b79e7e5e0f56c4786f2591a5426031f02a84358e3561d898d4a58ca5433ea6cab2ca695c7085a4225f7c035cf525f147f153551318cd1f3374fc1c14a1dd0a4cb59044ccc73b4bebc500f32024ed9c56cbfd6475affaadc7fc8d4e1e583f1701844ee16288a24e670ed14bf7331ce2d6d014dec395cb1a9bf2ebbec9047c81d665d09298901322cb7151ce6b6c6a01c108fe39c720457c3c7f8bc622e24b0ac48df8b61f41a0d9be6b4f8c2bbb070b5f78f5bd5b52019277b766081f8ee6d44229a14cf0ca3fd2e14b91a4b25834324c5e88dc4486ca89b3af2fccedd97b78b73f62098600a294bd160011f2633c71cb8ec40a8d9dfa49e738a4cb8f464d58b9cb4bf564e9f502f4091387b1ca343f159f8087821a18797e04fb076e14e986b12d465e31914e44c0adea041341b926b0d6ddd51266ef6e1a41c18568bfcba10acc46e49202dcdb0a33a408ec5ea5a547855aca829399157e5d9c96fe157293808b0066d50ca866b43c87ee55a08ac3bce7a02fc9bcff3f3c8f82985282f9a1435aefb896c5528e4d5294cacad42a1495b9531941602709093da8849d51e9521fd0cd042385499e941a80b745f46b1d720f73ef437740bc252db54870101ff34aab532b6ddfa1af8904911822df265d7142a7ac7caf4e343aa711674e538d54535e2e5fc5c32e004dac46c35dcc31948f08f99a0b1c02749b5f477151605a5e361f9884cfb2feeff21750068175b549dc08f2408a9f17cf595ee9a82c2d73249c6c46a23f555fd2c3f4dac2399bcafc0f5931cbc13442542772194a6596d50bff321bc5df3c54a31||17|2400",raw_input("Key : ")))
